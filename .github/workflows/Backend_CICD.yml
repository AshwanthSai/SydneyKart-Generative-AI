name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/sydneykart-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            NODE_ENV=production
            PORT=5000
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRES_TIME=${{ secrets.JWT_EXPIRES_TIME }}
            COOKIE_EXPIRES_TIME=${{ secrets.COOKIE_EXPIRES_TIME }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            STRIPE_KEY=${{ secrets.STRIPE_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_EMAIL=${{ secrets.SMTP_EMAIL }}
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            SMTP_FROM_EMAIL=${{ secrets.SMTP_FROM_EMAIL }}
            SMTP_FROM_NAME=${{ secrets.SMTP_FROM_NAME }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            PRICE_API_KEY=${{ secrets.PRICE_API_KEY }}
            UPSTASH_VECTOR_REST_URL=${{ secrets.UPSTASH_VECTOR_REST_URL }}
            UPSTASH_VECTOR_REST_TOKEN=${{ secrets.UPSTASH_VECTOR_REST_TOKEN }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Deploy Container
        run: |
          sudo -E docker stop sydneykart-backend || true
          sudo -E docker rm sydneykart-backend || true
          sudo -E docker pull ${{ env.IMAGE_NAME }}:main
          sudo -E docker run -d \
            --name sydneykart-backend \
            --restart unless-stopped \
            -p 5000:5000 \
            -e NODE_ENV=production \
            -e PORT=5000 \
            -e MONGODB_URI="${{ secrets.MONGODB_URI }}" \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e JWT_EXPIRES_TIME="${{ secrets.JWT_EXPIRES_TIME }}" \
            -e COOKIE_EXPIRES_TIME="${{ secrets.COOKIE_EXPIRES_TIME }}" \
            -e CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
            -e CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}" \
            -e CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}" \
            -e STRIPE_KEY="${{ secrets.STRIPE_KEY }}" \
            -e STRIPE_WEBHOOK_SECRET="${{ secrets.STRIPE_WEBHOOK_SECRET }}" \
            -e SMTP_HOST="${{ secrets.SMTP_HOST }}" \
            -e SMTP_PORT="${{ secrets.SMTP_PORT }}" \
            -e SMTP_EMAIL="${{ secrets.SMTP_EMAIL }}" \
            -e SMTP_PASSWORD="${{ secrets.SMTP_PASSWORD }}" \
            -e SMTP_FROM_EMAIL="${{ secrets.SMTP_FROM_EMAIL }}" \
            -e SMTP_FROM_NAME="${{ secrets.SMTP_FROM_NAME }}" \
            -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            -e PRICE_API_KEY="${{ secrets.PRICE_API_KEY }}" \
            -e UPSTASH_VECTOR_REST_URL="${{ secrets.UPSTASH_VECTOR_REST_URL }}" \
            -e UPSTASH_VECTOR_REST_TOKEN="${{ secrets.UPSTASH_VECTOR_REST_TOKEN }}" \
            ${{ env.IMAGE_NAME }}:main
      
